Inspecting 22 files
CC.CCCWCCWWWWCWCWWCCWC

Offenses:

instruction.rb:13:1: C: Trailing whitespace detected.
instruction.rb:29:5: C: Assignment Branch Condition size for check_pattern is too high. [15.1/15]
    def check_pattern(pattern2)
    ^^^
instruction.rb:32:81: C: Line is too long. [90/80]
          both_white = (pattern[x][y] == Colors::WHITE && pattern2[x][y] == Colors::WHITE)
                                                                                ^^^^^^^^^^
instruction.rb:33:81: C: Line is too long. [94/80]
          both_not_white = (pattern[x][y] != Colors::WHITE && pattern2[x][y] != Colors::WHITE)
                                                                                ^^^^^^^^^^^^^^
instruction.rb:39:1: C: Trailing whitespace detected.
instruction.rb:49:1: C: Trailing whitespace detected.
colors.rb:13:4: C: Final newline missing.
end
   
machine.rb:39:3: C: Assignment Branch Condition size for reset is too high. [25.06/15]
  def reset
  ^^^
machine.rb:39:3: C: Method has too many lines. [15/10]
  def reset
  ^^^
machine.rb:49:81: C: Line is too long. [86/80]
    @log = Logger.new(File.new(File.dirname(__FILE__) + '/log/' + name + '.log', 'w'))
                                                                                ^^^^^^
machine.rb:65:3: C: Assignment Branch Condition size for run_one_instruction is too high. [27.46/15]
  def run_one_instruction
  ^^^
machine.rb:65:3: C: Method has too many lines. [13/10]
  def run_one_instruction
  ^^^
machine.rb:67:30: C: Use && instead of and.
    return if threads.empty? and @to_merge.empty?
                             ^^^
machine.rb:74:81: C: Line is too long. [82/80]
      thread_index = threads.find_index { |thread| thread.id == hash[:thread].id }
                                                                                ^^
machine.rb:100:81: C: Line is too long. [86/80]
    @to_merge << { thread: thread, new_thread: new_thread, direction: turn_direction }
                                                                                ^^^^^^
machine.rb:112:56: C: Use && instead of and.
    string << @input.slice!(0) while input.length != 0 and ('0'..'9').include?(input[0])
                                                       ^^^
machine.rb:112:81: C: Line is too long. [88/80]
    string << @input.slice!(0) while input.length != 0 and ('0'..'9').include?(input[0])
                                                                                ^^^^^^^^
simple_run.rb:8:1: C: Missing space after #.
#10_000.times { machine.run_one_instruction }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
simple_run.rb:15:28: C: Final newline missing.
puts "Total time: #{delta}"
                           
instructions.rb:25:81: C: Line is too long. [90/80]
          return ((i == Blank) ? i.new(0xffffff) : i.new(i.get_color_value(pattern).to_i))
                                                                                ^^^^^^^^^^
instructions.rb:49:81: C: Line is too long. [88/80]
  START_POINTS = [:StartThreadDown, :StartThreadLeft, :StartThreadRight, :StartThreadUp]
                                                                                ^^^^^^^^
instructions.rb:51:3: C: Assignment Branch Condition size for initialize is too high. [66.83/15]
  def initialize(image_file)
  ^^^
instructions.rb:51:3: C: Method has too many lines. [50/10]
  def initialize(image_file)
  ^^^
instructions.rb:54:1: C: Extra blank line detected.
instructions.rb:56:81: C: Line is too long. [85/80]
    throw ArgumentError.new unless (image.rows % Instruction::PATTERN_SIZE).zero? and
                                                                                ^^^^^
instructions.rb:56:83: C: Use && instead of and.
    throw ArgumentError.new unless (image.rows % Instruction::PATTERN_SIZE).zero? and
                                                                                  ^^^
instructions.rb:57:81: C: Line is too long. [84/80]
                                   (image.columns % Instruction::PATTERN_SIZE).zero?
                                                                                ^^^^
instructions.rb:76:1: C: Extra blank line detected.
instructions.rb:94:1: C: Extra blank line detected.
instructions.rb:100:81: C: Line is too long. [86/80]
        rescue :pattern_parse_error # if the pattern was not found in the instructions
                                                                                ^^^^^^
instructions.rb:101:81: C: Line is too long. [100/80]
          puts("#{y_a.index(pattern)}, #{@colors.index(y_a)} had a nil instruction. Shutting down!")
                                                                                ^^^^^^^^^^^^^^^^^^^^
instructions.rb:102:11: C: Use raise instead of fail to rethrow exceptions.
          fail
          ^^^^
instructions.rb:108:1: C: Extra blank line detected.
p_thread.rb:4:1: C: Class has too many lines. [106/100]
class PThread
^^^^^
p_thread.rb:55:3: C: Assignment Branch Condition size for run_one_instruction is too high. [71.18/15]
  def run_one_instruction
  ^^^
p_thread.rb:55:3: C: Method has too many lines. [22/10]
  def run_one_instruction
  ^^^
p_thread.rb:58:81: C: Line is too long. [93/80]
      parent.log.debug "^  T#{id} C:#{parent.cycles} is paused for #{@paused_counter} cycles"
                                                                                ^^^^^^^^^^^^^
p_thread.rb:67:81: C: Line is too long. [146/80]
    parent.log.info "T#{id} C:#{parent.cycles} Running #{instruction.class} @ #{position_x}, #{position_y} CV: #{instruction.color_value.to_s 16}"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
p_thread.rb:70:47: W: Redundant use of Object#to_s in interpolation.
    parent.log.debug "^     mw:#{memory_wheel.to_s}"
                                              ^^^^
p_thread.rb:79:5: C: Missing space after #.
    #move unless we called here recently.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
p_thread.rb:82:1: C: Trailing whitespace detected.
p_thread.rb:88:1: C: Trailing whitespace detected.
p_thread.rb:99:30: C: Surrounding space missing for operator -.
    index = DIRECTIONS.length-1 if index < 0
                             ^
p_thread.rb:110:3: C: Method has too many lines. [12/10]
  def move(amount)
  ^^^
p_thread.rb:112:7: C: Indent when as deep as case.
      when :up
      ^^^^
p_thread.rb:114:7: C: Indent when as deep as case.
      when :down
      ^^^^
p_thread.rb:116:7: C: Indent when as deep as case.
      when :left
      ^^^^
p_thread.rb:118:7: C: Indent when as deep as case.
      when :right
      ^^^^
memory_wheel.rb:24:1: C: Trailing whitespace detected.
memory_wheel.rb:30:1: C: Trailing whitespace detected.
memory_wheel.rb:41:1: C: Trailing whitespace detected.
memory_wheel.rb:54:3: C: Assignment Branch Condition size for to_s is too high. [16.06/15]
  def to_s
  ^^^
viewer/viewer.rb:6:1: C: Missing space after #.
#container for the whole window
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:9:1: C: Missing space after #.
#container for the viewer
^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:12:1: C: Missing space after #.
#container for stats
^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:15:1: C: Missing space after #.
#box with the tool bar
^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:18:1: C: Missing space after #.
#special group for play pause restart
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:21:1: C: Missing space after #.
#original instructions image
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:22:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pixbuf = Gdk::Pixbuf.new("../programs/project_euler_2.bmp")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:23:1: C: Missing space after #.
#Scale up so we can see it
^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:24:81: C: Line is too long. [89/80]
pixbuf = pixbuf.scale(pixbuf.width * 8.0, pixbuf.height * 8.0, Gdk::Pixbuf::INTERP_TILES)
                                                                                ^^^^^^^^^
viewer/viewer.rb:29:1: C: Missing space after #.
#put the image into the viewer box
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:32:1: C: Missing space after #.
#stats box controls
^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:33:31: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
cycles_label = Gtk::Label.new("Cycles: 0")
                              ^^^^^^^^^^^
viewer/viewer.rb:37:1: C: Missing space after #.
#tool bar buttons
^^^^^^^^^^^^^^^^^
viewer/viewer.rb:38:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
previous_step_button = Gtk::Button.new(label: "<-")
                                              ^^^^
viewer/viewer.rb:40:41: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
zoom_in_button = Gtk::Button.new(label: "Z+")
                                        ^^^^
viewer/viewer.rb:42:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
zoom_out_button = Gtk::Button.new(label: "Z-")
                                         ^^^^
viewer/viewer.rb:44:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
inspect_machine_button = Gtk::Button.new(label: "IM")
                                                ^^^^
viewer/viewer.rb:46:48: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
inspect_thread_button = Gtk::Button.new(label: "IT")
                                               ^^^^
viewer/viewer.rb:48:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
run_machine_button = Gtk::Button.new(label: "Run")
                                            ^^^^^
viewer/viewer.rb:50:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pause_machine_button = Gtk::Button.new(label: "Pause")
                                              ^^^^^^^
viewer/viewer.rb:52:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
restart_machine_button = Gtk::Button.new(label: "Restart")
                                                ^^^^^^^^^
viewer/viewer.rb:54:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
next_step_button = Gtk::Button.new(label: "->")
                                          ^^^^
viewer/viewer.rb:56:1: C: Missing space after #.
#put them into the toolbar
^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:57:81: C: Line is too long. [82/80]
toolbar_box.pack_start(previous_step_button, expand: true, fill: true, padding: 0)
                                                                                ^^
viewer/viewer.rb:60:81: C: Line is too long. [84/80]
toolbar_box.pack_start(inspect_machine_button, expand: true, fill: true, padding: 0)
                                                                                ^^^^
viewer/viewer.rb:61:81: C: Line is too long. [83/80]
toolbar_box.pack_start(inspect_thread_button, expand: true, fill: true, padding: 0)
                                                                                ^^^
viewer/viewer.rb:65:1: C: Missing space after #.
#options for the play pause restart table
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:66:37: C: Surrounding space missing for operator |.
options = Gtk::AttachOptions::EXPAND|Gtk::AttachOptions::FILL
                                    ^
viewer/viewer.rb:67:1: C: Missing space after #.
#put our controls on the table
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:69:81: C: Line is too long. [81/80]
machine_controls.attach(pause_machine_button, 0, 1, 1, 2, options, options, 0, 0)
                                                                                ^
viewer/viewer.rb:70:81: C: Line is too long. [83/80]
machine_controls.attach(restart_machine_button, 1, 2, 1, 2, options, options, 0, 0)
                                                                                ^^^
viewer/viewer.rb:72:1: C: Missing space after #.
#put all the boxes into the window
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:77:1: C: Extra blank line detected.
viewer/viewer.rb:78:1: C: Missing space after #.
#create and start the machine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:81:1: C: Missing space after #.
#attach events to machine methods
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:87:1: C: Missing space after #.
#create and start the window
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:89:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
window.title = "Pixesoteric Viewer"
               ^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:95:38: C: Avoid using {...} for multi-line blocks.
window.signal_connect(:delete_event) {
                                     ^
viewer/viewer.rb:96:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  puts "delete event occurred"
       ^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:97:3: C: Missing space after #.
  #true
  ^^^^^
viewer/viewer.rb:101:33: C: Avoid using {...} for multi-line blocks.
window.signal_connect(:destroy) {
                                ^
viewer/viewer.rb:102:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  puts "destroy event occurred"
       ^^^^^^^^^^^^^^^^^^^^^^^^
viewer/viewer.rb:105:9: C: Final newline missing.
Gtk.main
        
instructions/basic/comparison.rb:11:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/comparison.rb:13:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/comparison.rb:34:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/comparison.rb:36:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/comparison.rb:40:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/comparison.rb:57:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/comparison.rb:59:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/comparison.rb:63:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/math.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/math.rb:15:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:26:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/math.rb:28:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/math.rb:32:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:43:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/math.rb:45:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/math.rb:49:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:60:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/math.rb:62:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/math.rb:66:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:77:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/math.rb:79:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/math.rb:83:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/math.rb:88:1: C: 1 trailing blank lines detected.
instructions/basic/input.rb:4:81: C: Line is too long. [83/80]
# Grabs a number from input until it hits a non-printable char or the end of input.
                                                                                ^^^
instructions/basic/input.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/input.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/input.rb:15:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/input.rb:26:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/input.rb:28:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/input.rb:32:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/input.rb:36:4: C: Final newline missing.
end
   
instructions/basic/stage.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:17:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/stage.rb:30:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:32:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:38:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/stage.rb:51:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:53:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:68:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:70:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:85:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:87:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/stage.rb:91:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/stage.rb:105:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:107:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/stage.rb:111:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/stage.rb:125:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:127:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:131:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/stage.rb:137:81: C: Line is too long. [88/80]
# Pushes stage_1 to stage_2 amd pushes CMWL to stage_1, then moves to the left CV times.
                                                                                ^^^^^^^^
instructions/basic/stage.rb:142:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:144:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/stage.rb:151:19: C: Surrounding space missing for operator +.
      (color_value+1).times { thread.memory_wheel.move_left }
                  ^
instructions/basic/stage.rb:156:81: C: Line is too long. [89/80]
# Pushes stage_1 to stage_2 amd pushes CMWL to stage_1, then moves to the right CV times.
                                                                                ^^^^^^^^^
instructions/basic/stage.rb:161:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:163:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:170:19: C: Surrounding space missing for operator +.
      (color_value+1).times { thread.memory_wheel.move_right }
                  ^
instructions/basic/stage.rb:180:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:182:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:188:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/stage.rb:201:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/stage.rb:203:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/stage.rb:209:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/stage.rb:216:1: C: 8 trailing blank lines detected.
instructions/basic/memory.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:26:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:28:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:43:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:45:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:50:81: C: Line is too long. [86/80]
      thread.memory_wheel.push(thread.memory_wheel.pull.to_i - (color_value.to_i + 1))
                                                                                ^^^^^^
instructions/basic/memory.rb:60:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:62:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:67:81: C: Line is too long. [86/80]
      thread.memory_wheel.push(thread.memory_wheel.pull.to_i + (color_value.to_i + 1))
                                                                                ^^^^^^
instructions/basic/memory.rb:77:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:79:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:94:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:96:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/memory.rb:111:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:113:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:128:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:130:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:145:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:147:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:162:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/memory.rb:164:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/memory.rb:172:4: C: Final newline missing.
end
   
instructions/basic/thread_control.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:19:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:30:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:32:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:40:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:51:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:53:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:61:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:72:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:74:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:82:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:93:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:95:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:99:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:110:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:112:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:122:81: C: Line is too long. [115/80]
# Forks a thread and changes it's direction based on the direction it came in and forks the thread a new direction.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:123:81: C: Line is too long. [98/80]
# Just look at the symbol, you'll figure it out, the non-pipe side reverses the threads direction.
                                                                                ^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:128:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:130:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:134:5: C: Method has too many lines. [13/10]
    def run(thread, color_value)
    ^^^
instructions/basic/thread_control.rb:134:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:136:9: C: Indent when as deep as case.
        when :up
        ^^^^
instructions/basic/thread_control.rb:138:9: C: Indent when as deep as case.
        when :left
        ^^^^
instructions/basic/thread_control.rb:141:9: C: Indent when as deep as case.
        when :down
        ^^^^
instructions/basic/thread_control.rb:143:9: C: Indent when as deep as case.
        when :right
        ^^^^
instructions/basic/thread_control.rb:146:11: C: Provide an exception class and message as arguments to raise.
          raise Exception.new
          ^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:146:11: C: Use fail instead of raise to signal exceptions.
          raise Exception.new
          ^^^^^
instructions/basic/thread_control.rb:152:81: C: Line is too long. [115/80]
# Forks a thread and changes it's direction based on the direction it came in and forks the thread a new direction.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:153:81: C: Line is too long. [98/80]
# Just look at the symbol, you'll figure it out, the non-pipe side reverses the threads direction.
                                                                                ^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:158:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:160:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:164:5: C: Method has too many lines. [13/10]
    def run(thread, color_value)
    ^^^
instructions/basic/thread_control.rb:164:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:166:9: C: Indent when as deep as case.
        when :up
        ^^^^
instructions/basic/thread_control.rb:169:9: C: Indent when as deep as case.
        when :left
        ^^^^
instructions/basic/thread_control.rb:171:9: C: Indent when as deep as case.
        when :down
        ^^^^
instructions/basic/thread_control.rb:173:9: C: Indent when as deep as case.
        when :right
        ^^^^
instructions/basic/thread_control.rb:176:11: C: Provide an exception class and message as arguments to raise.
          raise Exception.new
          ^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:176:11: C: Use fail instead of raise to signal exceptions.
          raise Exception.new
          ^^^^^
instructions/basic/thread_control.rb:182:81: C: Line is too long. [115/80]
# Forks a thread and changes it's direction based on the direction it came in and forks the thread a new direction.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:183:81: C: Line is too long. [98/80]
# Just look at the symbol, you'll figure it out, the non-pipe side reverses the threads direction.
                                                                                ^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:188:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:190:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:194:5: C: Method has too many lines. [13/10]
    def run(thread, color_value)
    ^^^
instructions/basic/thread_control.rb:194:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:196:9: C: Indent when as deep as case.
        when :up
        ^^^^
instructions/basic/thread_control.rb:198:9: C: Indent when as deep as case.
        when :left
        ^^^^
instructions/basic/thread_control.rb:200:9: C: Indent when as deep as case.
        when :down
        ^^^^
instructions/basic/thread_control.rb:202:9: C: Indent when as deep as case.
        when :right
        ^^^^
instructions/basic/thread_control.rb:206:11: C: Provide an exception class and message as arguments to raise.
          raise Exception.new
          ^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:206:11: C: Use fail instead of raise to signal exceptions.
          raise Exception.new
          ^^^^^
instructions/basic/thread_control.rb:212:81: C: Line is too long. [115/80]
# Forks a thread and changes it's direction based on the direction it came in and forks the thread a new direction.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:213:81: C: Line is too long. [98/80]
# Just look at the symbol, you'll figure it out, the non-pipe side reverses the threads direction.
                                                                                ^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:218:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:220:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:224:5: C: Method has too many lines. [13/10]
    def run(thread, color_value)
    ^^^
instructions/basic/thread_control.rb:224:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/thread_control.rb:226:9: C: Indent when as deep as case.
        when :up
        ^^^^
instructions/basic/thread_control.rb:228:9: C: Indent when as deep as case.
        when :left
        ^^^^
instructions/basic/thread_control.rb:230:9: C: Indent when as deep as case.
        when :down
        ^^^^
instructions/basic/thread_control.rb:233:9: C: Indent when as deep as case.
        when :right
        ^^^^
instructions/basic/thread_control.rb:236:11: C: Provide an exception class and message as arguments to raise.
          raise Exception.new
          ^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:236:11: C: Use fail instead of raise to signal exceptions.
          raise Exception.new
          ^^^^^
instructions/basic/thread_control.rb:247:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:249:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/thread_control.rb:265:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:267:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:284:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/thread_control.rb:286:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/thread_control.rb:290:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/output.rb:4:1: C: Missing space after #.
#Outputs the CMWL as a char using r + g + b
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/output.rb:15:5: C: Assignment Branch Condition size for run is too high. [15.84/15]
    def run(thread, color_value)
    ^^^
instructions/basic/output.rb:18:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/output.rb:27:1: C: Missing space after #.
#Outputs the CMWL as a number. CV masks the value.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:32:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:34:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/output.rb:41:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/output.rb:55:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:57:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/output.rb:64:7: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if color_value.to_i != 0x000000
      ^^
instructions/basic/output.rb:78:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:80:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/output.rb:86:81: C: Line is too long. [86/80]
      char = (((mem & 0xff0000) >> 16) + ((mem & 0xff00) >> 8) + (mem & 0xff)) % 0x100
                                                                                ^^^^^^
instructions/basic/output.rb:97:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:99:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::BLACK],
                                                       ^
instructions/basic/output.rb:114:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:116:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/output.rb:131:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:133:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/output.rb:149:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/output.rb:151:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/output.rb:160:4: C: Final newline missing.
end
   
instructions/basic/directions.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/directions.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/directions.rb:15:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/directions.rb:26:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/directions.rb:28:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/directions.rb:32:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/directions.rb:43:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/directions.rb:45:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/directions.rb:49:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/directions.rb:60:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/directions.rb:62:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/directions.rb:66:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/directions.rb:70:4: C: Final newline missing.
end
   
instructions/basic/boolean.rb:9:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/boolean.rb:11:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/boolean.rb:15:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/boolean.rb:30:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/boolean.rb:32:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/boolean.rb:36:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/boolean.rb:37:81: C: Line is too long. [91/80]
      if (stage_1 != Instruction::LOGICAL_FALSE) && (stage_2 != Instruction::LOGICAL_FALSE)
                                                                                ^^^^^^^^^^^
instructions/basic/boolean.rb:51:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/boolean.rb:53:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/boolean.rb:57:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/boolean.rb:58:81: C: Line is too long. [91/80]
      if (stage_1 != Instruction::LOGICAL_FALSE) || (stage_2 != Instruction::LOGICAL_FALSE)
                                                                                ^^^^^^^^^^^
instructions/basic/boolean.rb:72:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/boolean.rb:74:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/boolean.rb:78:21: W: Unused method argument - color_value. If it's necessary, use _ or _color_value as an argument name to indicate that it won't be used.
    def run(thread, color_value)
                    ^^^^^^^^^^^
instructions/basic/boolean.rb:79:81: C: Line is too long. [90/80]
      if (stage_1 != Instruction::LOGICAL_FALSE) ^ (stage_2 != Instruction::LOGICAL_FALSE)
                                                                                ^^^^^^^^^^
instructions/basic/boolean.rb:86:4: C: Final newline missing.
end
   
instructions/basic/conditionals.rb:11:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/conditionals.rb:13:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::BLACK, Colors::WHITE],
                                                       ^
instructions/basic/conditionals.rb:34:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/conditionals.rb:36:56: C: Avoid comma after the last item of an array.
          [Colors::BLACK, Colors::BLACK, Colors::BLACK],
                                                       ^
instructions/basic/basic.rb:20:11: C: Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
instructions/basic/basic.rb:22:56: C: Avoid comma after the last item of an array.
          [Colors::WHITE, Colors::WHITE, Colors::WHITE],
                                                       ^
instructions/basic/basic.rb:26:4: C: Final newline missing.
end
   
spec/machine_spec.rb:4:1: C: Extra blank line detected.
spec/machine_spec.rb:6:3: C: Missing space after #.
  #easy tests
  ^^^^^^^^^^^
spec/machine_spec.rb:10:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(hello_world.output).to eq "Hello, world!"
                                     ^^^^^^^^^^^^^^^
spec/machine_spec.rb:16:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(hello_world.output).to eq "Hello, world!"
                                     ^^^^^^^^^^^^^^^
spec/machine_spec.rb:22:32: W: (...) interpreted as grouped expression.
    expect(a_to_z.output).to eq ('A'..'Z').to_a.join
                               ^
spec/machine_spec.rb:52:81: C: Line is too long. [192/80]
    expect(fibonacci.output).to eq '1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578'
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:58:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(odd_or_even.output).to eq "ODD"
                                     ^^^^^
spec/machine_spec.rb:64:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(odd_or_even.output).to eq "EVEN"
                                     ^^^^^^
spec/machine_spec.rb:70:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(pipe_test_1.output).to eq "1234"
                                     ^^^^^^
spec/machine_spec.rb:76:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(pipe_test_2.output).to eq "12345678"
                                     ^^^^^^^^^^
spec/machine_spec.rb:82:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(thread_pause.output).to eq "HELLOHELLO"
                                      ^^^^^^^^^^^^
spec/machine_spec.rb:88:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(thread_priority.output).to eq "012345678"
                                         ^^^^^^^^^^^
spec/machine_spec.rb:94:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(insert_static_test.output).to eq "65280"
                                            ^^^^^^^
spec/machine_spec.rb:98:63: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    is_palindrome = Machine.new('programs/is_palindrome.bmp', "101")
                                                              ^^^^^
spec/machine_spec.rb:100:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(is_palindrome.output).to eq "TRUE"
                                       ^^^^^^
spec/machine_spec.rb:104:63: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    is_palindrome = Machine.new('programs/is_palindrome.bmp', "1234321")
                                                              ^^^^^^^^^
spec/machine_spec.rb:106:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(is_palindrome.output).to eq "TRUE"
                                       ^^^^^^
spec/machine_spec.rb:110:63: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    is_palindrome = Machine.new('programs/is_palindrome.bmp', "1234")
                                                              ^^^^^^
spec/machine_spec.rb:112:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(is_palindrome.output).to eq "FALSE"
                                       ^^^^^^^
spec/machine_spec.rb:116:63: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    is_palindrome = Machine.new('programs/is_palindrome.bmp', "113456")
                                                              ^^^^^^^^
spec/machine_spec.rb:118:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(is_palindrome.output).to eq "FALSE"
                                       ^^^^^^^
spec/machine_spec.rb:124:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(insert_static_test.output).to eq "7298 NOT PRIME"
                                            ^^^^^^^^^^^^^^^^
spec/machine_spec.rb:130:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(insert_static_test.output).to eq "9999 NOT PRIME"
                                            ^^^^^^^^^^^^^^^^
spec/machine_spec.rb:133:3: C: Missing space after #.
  #hard tests
  ^^^^^^^^^^^
spec/machine_spec.rb:137:34: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(factors.output).to eq "2 4 5 10 20 25 50 100 125 250"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:140:1: C: Extra blank line detected.
spec/machine_spec.rb:144:34: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(factors.output).to eq "2 4 5 8 10 20 25 40 50 100 125 200 250 500"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:150:34: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(factors.output).to eq "2 3 4 5 6 9 10 12 15 18 20 25 27 30 36 45 50 54 60 75 90 100 108 135 150 180 225 270 300 450 540 675 900 1350"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:150:81: C: Line is too long. [144/80]
    expect(factors.output).to eq "2 3 4 5 6 9 10 12 15 18 20 25 27 30 36 45 50 54 60 75 90 100 108 135 150 180 225 270 300 450 540 675 900 1350"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:156:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(insert_static_test.output).to eq "7297 PRIME"
                                            ^^^^^^^^^^^^
spec/machine_spec.rb:159:3: C: Missing space after #.
  #project_euler solutions
  ^^^^^^^^^^^^^^^^^^^^^^^^
spec/machine_spec.rb:163:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_1.output).to eq "233168"
                                         ^^^^^^^^
spec/machine_spec.rb:169:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_2.output).to eq "4613732"
                                         ^^^^^^^^^
spec/machine_spec.rb:175:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_3.output).to eq "7"
                                         ^^^
spec/machine_spec.rb:181:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_3.output).to eq "29"
                                         ^^^^
spec/machine_spec.rb:187:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_4.output).to eq "9009"
                                         ^^^^^^
spec/machine_spec.rb:194:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_4.output).to eq "906609"
                                         ^^^^^^^^
spec/machine_spec.rb:200:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(project_euler_5.output).to eq "2520"
                                         ^^^^^^
spec/machine_spec.rb:203:1: C: 1 trailing blank lines detected.
spec/instructions_spec.rb:4:1: C: Extra blank line detected.
spec/instructions_spec.rb:9:81: C: Line is too long. [81/80]
    expect(a_to_z.instructions.start_points.first.p.class).to eq StartThreadRight
                                                                                ^
spec/instructions_spec.rb:15:81: C: Line is too long. [83/80]
    expect(factorial.instructions.start_points.first.p.class).to eq StartThreadLeft
                                                                                ^^^
spec/instructions_spec.rb:21:81: C: Line is too long. [83/80]
    expect(fibonacci.instructions.start_points.first.p.class).to eq StartThreadLeft
                                                                                ^^^
spec/instructions_spec.rb:28:1: C: Trailing whitespace detected.
spec/instructions_spec.rb:29:4: C: Final newline missing.
end
   

22 files inspected, 361 offenses detected
